*nvim-highlight-hero.txt*       For Nvim version 0.5 and above.

==============================================================================
CONTENTS                                                       *highlight-hero*

1. Introduction ......................................... |highlight-hero-intro|
2. Setup and Configuration .............................. |highlight-hero-setup|
3. Default Keymaps .......................................|highlight-hero-maps|
4. Usage ................................................ |highlight-hero-usage|
5. Commands ..............................................|highlight-hero-commands|
6. Highlight Groups ......................................|highlight-hero-groups|
7. Customization .........................................|highlight-hero-customization|
8. Changelog .............................................|highlight-hero-changelog|

==============================================================================
1. Introduction                                      *highlight-hero-intro*

Nvim Highlight Hero is a Neovim plugin to interactively highlight words, phrases,
and multiline selections in your buffer. It allows multiple highlight "groups"
that can be toggled on and off easily, as well as an auto-highlight mode that
highlights the word under the cursor as you move.

==============================================================================
2. Setup and Configuration                           *highlight-hero-setup*

To install with your favorite plugin manager (e.g. packer):

```lua
use {
  'yourusername/nvim-highlight-hero',
  config = function()
    require('nvim-highlight-hero').setup()
  end
}
```

==============================================================================
3. Default Keymaps                                     *highlight-hero-maps*

The default key mappings include:

- **Normal Mode:**
  - `<num>m`: Highlight the current word with boundaries (e.g., `1m` highlights with group 1).
  - `<num>M`: Append the highlight for the current word (e.g., `1M` appends to group 1).
  - Repeating `<num>m` (e.g., `1m1m`) toggles the highlight for that group off.

- **Visual Mode:**
  - `<num>m`: Highlight the visual selection.
  - `<num>M`: Append highlight for the visual selection.

==============================================================================
4. Usage                                              *highlight-hero-usage*

### Auto-Highlight Mode
Use the key mapping `<leader>hh` to toggle auto-highlight mode. When enabled, the plugin highlights the word under the cursor as you move.

### Highlight Groups
- Highlight with a specific group (1-9):
  ```
  :HH 2
  ```
- Remove highlights from a group:
  ```
  :HH 2 off
  ```

==============================================================================
5. Commands                                           *highlight-hero-commands*

### `:HH`
User command for managing highlights.

#### Examples:

1. **Toggle Auto-Highlight:**
   ```
   :HH
   ```

2. **Turn Off All Highlights:**
   ```
   :HH off
   ```

3. **Turn On Auto-Highlight:**
   ```
   :HH on
   ```

4. **Manage Group Highlights:**
   - Highlight with group 2:
     ```
     :HH 2
     ```
   - Remove group 2 highlights:
     ```
     :HH 2 off
     ```

==============================================================================
6. Highlight Groups                                   *highlight-hero-groups*

Define or override the highlight groups to use custom colors.

#### Default Groups
```vim
highlight default link NvimHighlightHeroAuto Search
highlight default link NvimHighlightHeroMatch1 DiffText
highlight default link NvimHighlightHeroMatch2 Substitute
highlight default link NvimHighlightHeroMatch3 SpellBad
highlight default link NvimHighlightHeroMatch4 FoldColumn
highlight default link NvimHighlightHeroMatch5 Folded
highlight default link NvimHighlightHeroMatch6 TermCursor
highlight default link NvimHighlightHeroMatch7 DiffDelete
highlight default link NvimHighlightHeroMatch8 WildMenu
highlight default link NvimHighlightHeroMatch9 IncSearch
```

==============================================================================
7. Customization                                     *highlight-hero-customization*

### Key Mappings
You can configure key mappings to suit your workflow. Use the `keymaps` table to define mappings.

#### Example
```lua
require('nvim-highlight-hero').setup({
  keymaps = {
    toggle_auto_highlight = '<leader>hh',
    normal_match_1 = '1m',
    visual_match_1 = '1m',
  },
})
```

==============================================================================
8. Changelog                                         *highlight-hero-changelog*

See the GitHub repository for the latest changes and version history.

==============================================================================


